//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DAL", "FK_EmployeArticle", "Utilisateurs_Formateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Employe), "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Article), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_SessionCircuit", "Circuit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Circuit), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Session), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_ClientOffre", "Utilisateurs_Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Client), "Offre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Offre), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_EmployeSession", "Utilisateurs_Formateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Employe), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Session), true)]
[assembly: EdmRelationshipAttribute("DAL", "SessionVehicule", "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Session), "Vehicule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Vehicule))]
[assembly: EdmRelationshipAttribute("DAL", "FK_SessionTypeSession", "TypeSession", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.TypeSession), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Session), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Utilisateurs_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Role), "Utilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Utilisateur), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Sessions_EtatSessions", "EtatSession", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.EtatSession), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Session), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Offres_OffresReferences", "OffresReference", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.OffresReference), "Offre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Offre), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_OffresReferencesTypeSessions_OffresReferences", "OffresReference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.OffresReference), "OffresReferencesTypeSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.OffresReferencesTypeSession), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Utilisateurs_ClientSessions_Sessions", "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Session), "Utilisateurs_ClientSessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Utilisateurs_ClientSessions), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Client), "Utilisateurs_ClientSessions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Utilisateurs_ClientSessions), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Topic_Categorie", "Categorie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Categorie), "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Topic), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Message_Topic", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Topic), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Message), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Articles_TypeArticle", "TypeArticle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.TypeArticle), "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Article), true)]
[assembly: EdmRelationshipAttribute("DAL", "Article_Utilisateur_Employe", "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Article), "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Employe))]

#endregion

namespace DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SafeDrivingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SafeDrivingEntities object using the connection string found in the 'SafeDrivingEntities' section of the application configuration file.
        /// </summary>
        public SafeDrivingEntities() : base("name=SafeDrivingEntities", "SafeDrivingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SafeDrivingEntities object.
        /// </summary>
        public SafeDrivingEntities(string connectionString) : base(connectionString, "SafeDrivingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SafeDrivingEntities object.
        /// </summary>
        public SafeDrivingEntities(EntityConnection connection) : base(connection, "SafeDrivingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Article> Articles
        {
            get
            {
                if ((_Articles == null))
                {
                    _Articles = base.CreateObjectSet<Article>("Articles");
                }
                return _Articles;
            }
        }
        private ObjectSet<Article> _Articles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Circuit> Circuits
        {
            get
            {
                if ((_Circuits == null))
                {
                    _Circuits = base.CreateObjectSet<Circuit>("Circuits");
                }
                return _Circuits;
            }
        }
        private ObjectSet<Circuit> _Circuits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Offre> Offres
        {
            get
            {
                if ((_Offres == null))
                {
                    _Offres = base.CreateObjectSet<Offre>("Offres");
                }
                return _Offres;
            }
        }
        private ObjectSet<Offre> _Offres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OffresReference> OffresReferences
        {
            get
            {
                if ((_OffresReferences == null))
                {
                    _OffresReferences = base.CreateObjectSet<OffresReference>("OffresReferences");
                }
                return _OffresReferences;
            }
        }
        private ObjectSet<OffresReference> _OffresReferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Utilisateur> Utilisateurs
        {
            get
            {
                if ((_Utilisateurs == null))
                {
                    _Utilisateurs = base.CreateObjectSet<Utilisateur>("Utilisateurs");
                }
                return _Utilisateurs;
            }
        }
        private ObjectSet<Utilisateur> _Utilisateurs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicule> Vehicules
        {
            get
            {
                if ((_Vehicules == null))
                {
                    _Vehicules = base.CreateObjectSet<Vehicule>("Vehicules");
                }
                return _Vehicules;
            }
        }
        private ObjectSet<Vehicule> _Vehicules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeSession> TypeSessions
        {
            get
            {
                if ((_TypeSessions == null))
                {
                    _TypeSessions = base.CreateObjectSet<TypeSession>("TypeSessions");
                }
                return _TypeSessions;
            }
        }
        private ObjectSet<TypeSession> _TypeSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EtatSession> EtatSessions
        {
            get
            {
                if ((_EtatSessions == null))
                {
                    _EtatSessions = base.CreateObjectSet<EtatSession>("EtatSessions");
                }
                return _EtatSessions;
            }
        }
        private ObjectSet<EtatSession> _EtatSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OffresReferencesTypeSession> OffresReferencesTypeSessions
        {
            get
            {
                if ((_OffresReferencesTypeSessions == null))
                {
                    _OffresReferencesTypeSessions = base.CreateObjectSet<OffresReferencesTypeSession>("OffresReferencesTypeSessions");
                }
                return _OffresReferencesTypeSessions;
            }
        }
        private ObjectSet<OffresReferencesTypeSession> _OffresReferencesTypeSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Utilisateurs_ClientSessions> Utilisateurs_ClientSessions
        {
            get
            {
                if ((_Utilisateurs_ClientSessions == null))
                {
                    _Utilisateurs_ClientSessions = base.CreateObjectSet<Utilisateurs_ClientSessions>("Utilisateurs_ClientSessions");
                }
                return _Utilisateurs_ClientSessions;
            }
        }
        private ObjectSet<Utilisateurs_ClientSessions> _Utilisateurs_ClientSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Categorie> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categorie>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categorie> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topics
        {
            get
            {
                if ((_Topics == null))
                {
                    _Topics = base.CreateObjectSet<Topic>("Topics");
                }
                return _Topics;
            }
        }
        private ObjectSet<Topic> _Topics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeArticle> TypeArticles
        {
            get
            {
                if ((_TypeArticles == null))
                {
                    _TypeArticles = base.CreateObjectSet<TypeArticle>("TypeArticles");
                }
                return _TypeArticles;
            }
        }
        private ObjectSet<TypeArticle> _TypeArticles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Articles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticles(Article article)
        {
            base.AddObject("Articles", article);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Circuits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCircuits(Circuit circuit)
        {
            base.AddObject("Circuits", circuit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Offres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOffres(Offre offre)
        {
            base.AddObject("Offres", offre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OffresReferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOffresReferences(OffresReference offresReference)
        {
            base.AddObject("OffresReferences", offresReference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Utilisateurs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilisateurs(Utilisateur utilisateur)
        {
            base.AddObject("Utilisateurs", utilisateur);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicules(Vehicule vehicule)
        {
            base.AddObject("Vehicules", vehicule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeSessions(TypeSession typeSession)
        {
            base.AddObject("TypeSessions", typeSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EtatSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEtatSessions(EtatSession etatSession)
        {
            base.AddObject("EtatSessions", etatSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OffresReferencesTypeSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOffresReferencesTypeSessions(OffresReferencesTypeSession offresReferencesTypeSession)
        {
            base.AddObject("OffresReferencesTypeSessions", offresReferencesTypeSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Utilisateurs_ClientSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilisateurs_ClientSessions(Utilisateurs_ClientSessions utilisateurs_ClientSessions)
        {
            base.AddObject("Utilisateurs_ClientSessions", utilisateurs_ClientSessions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Categorie categorie)
        {
            base.AddObject("Categories", categorie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopics(Topic topic)
        {
            base.AddObject("Topics", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeArticles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeArticles(TypeArticle typeArticle)
        {
            base.AddObject("TypeArticles", typeArticle);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Article : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Article object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employeId">Initial value of the EmployeId property.</param>
        /// <param name="titre">Initial value of the Titre property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="contenu">Initial value of the Contenu property.</param>
        /// <param name="photo">Initial value of the Photo property.</param>
        public static Article CreateArticle(global::System.Int32 id, global::System.Int32 employeId, global::System.String titre, global::System.DateTime date, global::System.String contenu, global::System.Byte[] photo)
        {
            Article article = new Article();
            article.Id = id;
            article.EmployeId = employeId;
            article.Titre = titre;
            article.Date = date;
            article.Contenu = contenu;
            article.Photo = photo;
            return article;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeId
        {
            get
            {
                return _EmployeId;
            }
            set
            {
                OnEmployeIdChanging(value);
                ReportPropertyChanging("EmployeId");
                _EmployeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeId");
                OnEmployeIdChanged();
            }
        }
        private global::System.Int32 _EmployeId;
        partial void OnEmployeIdChanging(global::System.Int32 value);
        partial void OnEmployeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Titre
        {
            get
            {
                return _Titre;
            }
            set
            {
                OnTitreChanging(value);
                ReportPropertyChanging("Titre");
                _Titre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Titre");
                OnTitreChanged();
            }
        }
        private global::System.String _Titre;
        partial void OnTitreChanging(global::System.String value);
        partial void OnTitreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contenu
        {
            get
            {
                return _Contenu;
            }
            set
            {
                OnContenuChanging(value);
                ReportPropertyChanging("Contenu");
                _Contenu = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contenu");
                OnContenuChanged();
            }
        }
        private global::System.String _Contenu;
        partial void OnContenuChanging(global::System.String value);
        partial void OnContenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeArticleId
        {
            get
            {
                return _TypeArticleId;
            }
            set
            {
                OnTypeArticleIdChanging(value);
                ReportPropertyChanging("TypeArticleId");
                _TypeArticleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeArticleId");
                OnTypeArticleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeArticleId;
        partial void OnTypeArticleIdChanging(Nullable<global::System.Int32> value);
        partial void OnTypeArticleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_EmployeArticle", "Utilisateurs_Formateur")]
        public Employe Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("DAL.FK_EmployeArticle", "Utilisateurs_Formateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("DAL.FK_EmployeArticle", "Utilisateurs_Formateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employe> EmployeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("DAL.FK_EmployeArticle", "Utilisateurs_Formateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employe>("DAL.FK_EmployeArticle", "Utilisateurs_Formateur", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Articles_TypeArticle", "TypeArticle")]
        public TypeArticle TypeArticle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeArticle>("DAL.FK_Articles_TypeArticle", "TypeArticle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeArticle>("DAL.FK_Articles_TypeArticle", "TypeArticle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeArticle> TypeArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeArticle>("DAL.FK_Articles_TypeArticle", "TypeArticle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeArticle>("DAL.FK_Articles_TypeArticle", "TypeArticle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "Article_Utilisateur_Employe", "Employe")]
        public EntityCollection<Employe> Utilisateurs_Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employe>("DAL.Article_Utilisateur_Employe", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employe>("DAL.Article_Utilisateur_Employe", "Employe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Categorie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categorie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Categorie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="dateCreation">Initial value of the DateCreation property.</param>
        /// <param name="createurId">Initial value of the CreateurId property.</param>
        public static Categorie CreateCategorie(global::System.Int32 id, global::System.String nom, global::System.DateTime dateCreation, global::System.Int32 createurId)
        {
            Categorie categorie = new Categorie();
            categorie.Id = id;
            categorie.Nom = nom;
            categorie.DateCreation = dateCreation;
            categorie.CreateurId = createurId;
            return categorie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreation
        {
            get
            {
                return _DateCreation;
            }
            set
            {
                OnDateCreationChanging(value);
                ReportPropertyChanging("DateCreation");
                _DateCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreation");
                OnDateCreationChanged();
            }
        }
        private global::System.DateTime _DateCreation;
        partial void OnDateCreationChanging(global::System.DateTime value);
        partial void OnDateCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreateurId
        {
            get
            {
                return _CreateurId;
            }
            set
            {
                OnCreateurIdChanging(value);
                ReportPropertyChanging("CreateurId");
                _CreateurId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateurId");
                OnCreateurIdChanged();
            }
        }
        private global::System.Int32 _CreateurId;
        partial void OnCreateurIdChanging(global::System.Int32 value);
        partial void OnCreateurIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Topic_Categorie", "Topic")]
        public EntityCollection<Topic> Topics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Topic>("DAL.FK_Topic_Categorie", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Topic>("DAL.FK_Topic_Categorie", "Topic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Circuit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Circuit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Circuit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        public static Circuit CreateCircuit(global::System.Int32 id, global::System.String nom)
        {
            Circuit circuit = new Circuit();
            circuit.Id = id;
            circuit.Nom = nom;
            return circuit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_SessionCircuit", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("DAL.FK_SessionCircuit", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("DAL.FK_SessionCircuit", "Session", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : Utilisateur
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        /// <param name="adresse">Initial value of the Adresse property.</param>
        /// <param name="ville">Initial value of the Ville property.</param>
        /// <param name="codePostal">Initial value of the CodePostal property.</param>
        /// <param name="telephone">Initial value of the Telephone property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="dateNaissance">Initial value of the DateNaissance property.</param>
        public static Client CreateClient(global::System.Int32 id, global::System.String nom, global::System.String prenom, global::System.String adresse, global::System.String ville, global::System.String codePostal, global::System.String telephone, global::System.String mail, global::System.String password, global::System.Int32 roleId, global::System.DateTime dateNaissance)
        {
            Client client = new Client();
            client.Id = id;
            client.Nom = nom;
            client.Prenom = prenom;
            client.Adresse = adresse;
            client.Ville = ville;
            client.CodePostal = codePostal;
            client.Telephone = telephone;
            client.Mail = mail;
            client.Password = password;
            client.RoleId = roleId;
            client.DateNaissance = dateNaissance;
            return client;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateNaissance
        {
            get
            {
                return _DateNaissance;
            }
            set
            {
                OnDateNaissanceChanging(value);
                ReportPropertyChanging("DateNaissance");
                _DateNaissance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateNaissance");
                OnDateNaissanceChanged();
            }
        }
        private global::System.DateTime _DateNaissance;
        partial void OnDateNaissanceChanging(global::System.DateTime value);
        partial void OnDateNaissanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCoded
        {
            get
            {
                return _IsCoded;
            }
            set
            {
                OnIsCodedChanging(value);
                ReportPropertyChanging("IsCoded");
                _IsCoded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCoded");
                OnIsCodedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCoded;
        partial void OnIsCodedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCodedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_ClientOffre", "Offre")]
        public EntityCollection<Offre> Offres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Offre>("DAL.FK_ClientOffre", "Offre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Offre>("DAL.FK_ClientOffre", "Offre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Utilisateurs_ClientSessions")]
        public EntityCollection<Utilisateurs_ClientSessions> Utilisateurs_ClientSessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Utilisateurs_ClientSessions>("DAL.FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Utilisateurs_ClientSessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Utilisateurs_ClientSessions>("DAL.FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Utilisateurs_ClientSessions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Employe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employe : Utilisateur
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employe object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        /// <param name="adresse">Initial value of the Adresse property.</param>
        /// <param name="ville">Initial value of the Ville property.</param>
        /// <param name="codePostal">Initial value of the CodePostal property.</param>
        /// <param name="telephone">Initial value of the Telephone property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static Employe CreateEmploye(global::System.Int32 id, global::System.String nom, global::System.String prenom, global::System.String adresse, global::System.String ville, global::System.String codePostal, global::System.String telephone, global::System.String mail, global::System.String password, global::System.Int32 roleId)
        {
            Employe employe = new Employe();
            employe.Id = id;
            employe.Nom = nom;
            employe.Prenom = prenom;
            employe.Adresse = adresse;
            employe.Ville = ville;
            employe.CodePostal = codePostal;
            employe.Telephone = telephone;
            employe.Mail = mail;
            employe.Password = password;
            employe.RoleId = roleId;
            return employe;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_EmployeArticle", "Article")]
        public EntityCollection<Article> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Article>("DAL.FK_EmployeArticle", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Article>("DAL.FK_EmployeArticle", "Article", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_EmployeSession", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("DAL.FK_EmployeSession", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("DAL.FK_EmployeSession", "Session", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "Article_Utilisateur_Employe", "Article")]
        public EntityCollection<Article> Articles_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Article>("DAL.Article_Utilisateur_Employe", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Article>("DAL.Article_Utilisateur_Employe", "Article", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="EtatSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EtatSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EtatSession object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        public static EtatSession CreateEtatSession(global::System.Int32 id, global::System.String nom)
        {
            EtatSession etatSession = new EtatSession();
            etatSession.Id = id;
            etatSession.Nom = nom;
            return etatSession;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Sessions_EtatSessions", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("DAL.FK_Sessions_EtatSessions", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("DAL.FK_Sessions_EtatSessions", "Session", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contenu">Initial value of the Contenu property.</param>
        /// <param name="dateCreation">Initial value of the DateCreation property.</param>
        /// <param name="createurId">Initial value of the CreateurId property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.String contenu, global::System.DateTime dateCreation, global::System.Int32 createurId, global::System.Int32 topicId)
        {
            Message message = new Message();
            message.Id = id;
            message.Contenu = contenu;
            message.DateCreation = dateCreation;
            message.CreateurId = createurId;
            message.TopicId = topicId;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contenu
        {
            get
            {
                return _Contenu;
            }
            set
            {
                OnContenuChanging(value);
                ReportPropertyChanging("Contenu");
                _Contenu = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contenu");
                OnContenuChanged();
            }
        }
        private global::System.String _Contenu;
        partial void OnContenuChanging(global::System.String value);
        partial void OnContenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreation
        {
            get
            {
                return _DateCreation;
            }
            set
            {
                OnDateCreationChanging(value);
                ReportPropertyChanging("DateCreation");
                _DateCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreation");
                OnDateCreationChanged();
            }
        }
        private global::System.DateTime _DateCreation;
        partial void OnDateCreationChanging(global::System.DateTime value);
        partial void OnDateCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreateurId
        {
            get
            {
                return _CreateurId;
            }
            set
            {
                OnCreateurIdChanging(value);
                ReportPropertyChanging("CreateurId");
                _CreateurId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateurId");
                OnCreateurIdChanged();
            }
        }
        private global::System.Int32 _CreateurId;
        partial void OnCreateurIdChanging(global::System.Int32 value);
        partial void OnCreateurIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                OnTopicIdChanging(value);
                ReportPropertyChanging("TopicId");
                _TopicId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicId");
                OnTopicIdChanged();
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Message_Topic", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DAL.FK_Message_Topic", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DAL.FK_Message_Topic", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DAL.FK_Message_Topic", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("DAL.FK_Message_Topic", "Topic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Offre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Offre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Offre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static Offre CreateOffre(global::System.Int32 id, global::System.Int32 clientId)
        {
            Offre offre = new Offre();
            offre.Id = id;
            offre.ClientId = clientId;
            return offre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OffresReferencesId
        {
            get
            {
                return _OffresReferencesId;
            }
            set
            {
                OnOffresReferencesIdChanging(value);
                ReportPropertyChanging("OffresReferencesId");
                _OffresReferencesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OffresReferencesId");
                OnOffresReferencesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OffresReferencesId;
        partial void OnOffresReferencesIdChanging(Nullable<global::System.Int32> value);
        partial void OnOffresReferencesIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_ClientOffre", "Utilisateurs_Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DAL.FK_ClientOffre", "Utilisateurs_Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DAL.FK_ClientOffre", "Utilisateurs_Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DAL.FK_ClientOffre", "Utilisateurs_Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DAL.FK_ClientOffre", "Utilisateurs_Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Offres_OffresReferences", "OffresReference")]
        public OffresReference OffresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OffresReference>("DAL.FK_Offres_OffresReferences", "OffresReference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OffresReference>("DAL.FK_Offres_OffresReferences", "OffresReference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OffresReference> OffresReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OffresReference>("DAL.FK_Offres_OffresReferences", "OffresReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OffresReference>("DAL.FK_Offres_OffresReferences", "OffresReference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="OffresReference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OffresReference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OffresReference object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prix">Initial value of the Prix property.</param>
        public static OffresReference CreateOffresReference(global::System.Int32 id, global::System.String nom, global::System.Single prix)
        {
            OffresReference offresReference = new OffresReference();
            offresReference.Id = id;
            offresReference.Nom = nom;
            offresReference.Prix = prix;
            return offresReference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Prix
        {
            get
            {
                return _Prix;
            }
            set
            {
                OnPrixChanging(value);
                ReportPropertyChanging("Prix");
                _Prix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Prix");
                OnPrixChanged();
            }
        }
        private global::System.Single _Prix;
        partial void OnPrixChanging(global::System.Single value);
        partial void OnPrixChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Offres_OffresReferences", "Offre")]
        public EntityCollection<Offre> Offres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Offre>("DAL.FK_Offres_OffresReferences", "Offre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Offre>("DAL.FK_Offres_OffresReferences", "Offre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_OffresReferencesTypeSessions_OffresReferences", "OffresReferencesTypeSession")]
        public EntityCollection<OffresReferencesTypeSession> OffresReferencesTypeSessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OffresReferencesTypeSession>("DAL.FK_OffresReferencesTypeSessions_OffresReferences", "OffresReferencesTypeSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OffresReferencesTypeSession>("DAL.FK_OffresReferencesTypeSessions_OffresReferences", "OffresReferencesTypeSession", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="OffresReferencesTypeSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OffresReferencesTypeSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OffresReferencesTypeSession object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="offresReferencesId">Initial value of the OffresReferencesId property.</param>
        /// <param name="typeSessionId">Initial value of the TypeSessionId property.</param>
        /// <param name="nbTypeSession">Initial value of the NbTypeSession property.</param>
        public static OffresReferencesTypeSession CreateOffresReferencesTypeSession(global::System.Int32 id, global::System.Int32 offresReferencesId, global::System.Int32 typeSessionId, global::System.Int32 nbTypeSession)
        {
            OffresReferencesTypeSession offresReferencesTypeSession = new OffresReferencesTypeSession();
            offresReferencesTypeSession.Id = id;
            offresReferencesTypeSession.OffresReferencesId = offresReferencesId;
            offresReferencesTypeSession.TypeSessionId = typeSessionId;
            offresReferencesTypeSession.NbTypeSession = nbTypeSession;
            return offresReferencesTypeSession;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OffresReferencesId
        {
            get
            {
                return _OffresReferencesId;
            }
            set
            {
                OnOffresReferencesIdChanging(value);
                ReportPropertyChanging("OffresReferencesId");
                _OffresReferencesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OffresReferencesId");
                OnOffresReferencesIdChanged();
            }
        }
        private global::System.Int32 _OffresReferencesId;
        partial void OnOffresReferencesIdChanging(global::System.Int32 value);
        partial void OnOffresReferencesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeSessionId
        {
            get
            {
                return _TypeSessionId;
            }
            set
            {
                OnTypeSessionIdChanging(value);
                ReportPropertyChanging("TypeSessionId");
                _TypeSessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeSessionId");
                OnTypeSessionIdChanged();
            }
        }
        private global::System.Int32 _TypeSessionId;
        partial void OnTypeSessionIdChanging(global::System.Int32 value);
        partial void OnTypeSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NbTypeSession
        {
            get
            {
                return _NbTypeSession;
            }
            set
            {
                OnNbTypeSessionChanging(value);
                ReportPropertyChanging("NbTypeSession");
                _NbTypeSession = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NbTypeSession");
                OnNbTypeSessionChanged();
            }
        }
        private global::System.Int32 _NbTypeSession;
        partial void OnNbTypeSessionChanging(global::System.Int32 value);
        partial void OnNbTypeSessionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_OffresReferencesTypeSessions_OffresReferences", "OffresReference")]
        public OffresReference OffresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OffresReference>("DAL.FK_OffresReferencesTypeSessions_OffresReferences", "OffresReference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OffresReference>("DAL.FK_OffresReferencesTypeSessions_OffresReferences", "OffresReference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OffresReference> OffresReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OffresReference>("DAL.FK_OffresReferencesTypeSessions_OffresReferences", "OffresReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OffresReference>("DAL.FK_OffresReferencesTypeSessions_OffresReferences", "OffresReference", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="privilege">Initial value of the Privilege property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String privilege)
        {
            Role role = new Role();
            role.Id = id;
            role.Privilege = privilege;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Privilege
        {
            get
            {
                return _Privilege;
            }
            set
            {
                OnPrivilegeChanging(value);
                ReportPropertyChanging("Privilege");
                _Privilege = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Privilege");
                OnPrivilegeChanged();
            }
        }
        private global::System.String _Privilege;
        partial void OnPrivilegeChanging(global::System.String value);
        partial void OnPrivilegeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Utilisateurs_Roles", "Utilisateur")]
        public EntityCollection<Utilisateur> Utilisateurs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Utilisateur>("DAL.FK_Utilisateurs_Roles", "Utilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Utilisateur>("DAL.FK_Utilisateurs_Roles", "Utilisateur", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeSessionId">Initial value of the TypeSessionId property.</param>
        /// <param name="employeId">Initial value of the EmployeId property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="circuitId">Initial value of the CircuitId property.</param>
        /// <param name="date_Id">Initial value of the Date_Id property.</param>
        /// <param name="etatSessionsId">Initial value of the EtatSessionsId property.</param>
        /// <param name="nbParticipant">Initial value of the NbParticipant property.</param>
        public static Session CreateSession(global::System.Int32 id, global::System.Int32 typeSessionId, global::System.Int32 employeId, global::System.String nom, global::System.Int32 circuitId, global::System.Int32 date_Id, global::System.Int32 etatSessionsId, global::System.Int32 nbParticipant)
        {
            Session session = new Session();
            session.Id = id;
            session.TypeSessionId = typeSessionId;
            session.EmployeId = employeId;
            session.Nom = nom;
            session.CircuitId = circuitId;
            session.Date_Id = date_Id;
            session.EtatSessionsId = etatSessionsId;
            session.NbParticipant = nbParticipant;
            return session;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeSessionId
        {
            get
            {
                return _TypeSessionId;
            }
            set
            {
                OnTypeSessionIdChanging(value);
                ReportPropertyChanging("TypeSessionId");
                _TypeSessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeSessionId");
                OnTypeSessionIdChanged();
            }
        }
        private global::System.Int32 _TypeSessionId;
        partial void OnTypeSessionIdChanging(global::System.Int32 value);
        partial void OnTypeSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeId
        {
            get
            {
                return _EmployeId;
            }
            set
            {
                OnEmployeIdChanging(value);
                ReportPropertyChanging("EmployeId");
                _EmployeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeId");
                OnEmployeIdChanged();
            }
        }
        private global::System.Int32 _EmployeId;
        partial void OnEmployeIdChanging(global::System.Int32 value);
        partial void OnEmployeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CircuitId
        {
            get
            {
                return _CircuitId;
            }
            set
            {
                OnCircuitIdChanging(value);
                ReportPropertyChanging("CircuitId");
                _CircuitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CircuitId");
                OnCircuitIdChanged();
            }
        }
        private global::System.Int32 _CircuitId;
        partial void OnCircuitIdChanging(global::System.Int32 value);
        partial void OnCircuitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Date_Id
        {
            get
            {
                return _Date_Id;
            }
            set
            {
                OnDate_IdChanging(value);
                ReportPropertyChanging("Date_Id");
                _Date_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date_Id");
                OnDate_IdChanged();
            }
        }
        private global::System.Int32 _Date_Id;
        partial void OnDate_IdChanging(global::System.Int32 value);
        partial void OnDate_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EtatSessionsId
        {
            get
            {
                return _EtatSessionsId;
            }
            set
            {
                OnEtatSessionsIdChanging(value);
                ReportPropertyChanging("EtatSessionsId");
                _EtatSessionsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EtatSessionsId");
                OnEtatSessionsIdChanged();
            }
        }
        private global::System.Int32 _EtatSessionsId;
        partial void OnEtatSessionsIdChanging(global::System.Int32 value);
        partial void OnEtatSessionsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NbParticipant
        {
            get
            {
                return _NbParticipant;
            }
            set
            {
                OnNbParticipantChanging(value);
                ReportPropertyChanging("NbParticipant");
                _NbParticipant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NbParticipant");
                OnNbParticipantChanged();
            }
        }
        private global::System.Int32 _NbParticipant;
        partial void OnNbParticipantChanging(global::System.Int32 value);
        partial void OnNbParticipantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HeureDebut
        {
            get
            {
                return _HeureDebut;
            }
            set
            {
                OnHeureDebutChanging(value);
                ReportPropertyChanging("HeureDebut");
                _HeureDebut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeureDebut");
                OnHeureDebutChanged();
            }
        }
        private Nullable<global::System.DateTime> _HeureDebut;
        partial void OnHeureDebutChanging(Nullable<global::System.DateTime> value);
        partial void OnHeureDebutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HeureFin
        {
            get
            {
                return _HeureFin;
            }
            set
            {
                OnHeureFinChanging(value);
                ReportPropertyChanging("HeureFin");
                _HeureFin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeureFin");
                OnHeureFinChanged();
            }
        }
        private Nullable<global::System.DateTime> _HeureFin;
        partial void OnHeureFinChanging(Nullable<global::System.DateTime> value);
        partial void OnHeureFinChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_SessionCircuit", "Circuit")]
        public Circuit Circuit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circuit>("DAL.FK_SessionCircuit", "Circuit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circuit>("DAL.FK_SessionCircuit", "Circuit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Circuit> CircuitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circuit>("DAL.FK_SessionCircuit", "Circuit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Circuit>("DAL.FK_SessionCircuit", "Circuit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_EmployeSession", "Utilisateurs_Formateur")]
        public Employe Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("DAL.FK_EmployeSession", "Utilisateurs_Formateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("DAL.FK_EmployeSession", "Utilisateurs_Formateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employe> EmployeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("DAL.FK_EmployeSession", "Utilisateurs_Formateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employe>("DAL.FK_EmployeSession", "Utilisateurs_Formateur", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "SessionVehicule", "Vehicule")]
        public EntityCollection<Vehicule> Vehicules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicule>("DAL.SessionVehicule", "Vehicule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicule>("DAL.SessionVehicule", "Vehicule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_SessionTypeSession", "TypeSession")]
        public TypeSession TypeSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSession>("DAL.FK_SessionTypeSession", "TypeSession").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSession>("DAL.FK_SessionTypeSession", "TypeSession").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeSession> TypeSessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeSession>("DAL.FK_SessionTypeSession", "TypeSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeSession>("DAL.FK_SessionTypeSession", "TypeSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Sessions_EtatSessions", "EtatSession")]
        public EtatSession EtatSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EtatSession>("DAL.FK_Sessions_EtatSessions", "EtatSession").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EtatSession>("DAL.FK_Sessions_EtatSessions", "EtatSession").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EtatSession> EtatSessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EtatSession>("DAL.FK_Sessions_EtatSessions", "EtatSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EtatSession>("DAL.FK_Sessions_EtatSessions", "EtatSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Utilisateurs_ClientSessions_Sessions", "Utilisateurs_ClientSessions")]
        public EntityCollection<Utilisateurs_ClientSessions> Utilisateurs_ClientSessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Utilisateurs_ClientSessions>("DAL.FK_Utilisateurs_ClientSessions_Sessions", "Utilisateurs_ClientSessions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Utilisateurs_ClientSessions>("DAL.FK_Utilisateurs_ClientSessions_Sessions", "Utilisateurs_ClientSessions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="dateCreation">Initial value of the DateCreation property.</param>
        /// <param name="createurId">Initial value of the CreateurId property.</param>
        /// <param name="contenu">Initial value of the Contenu property.</param>
        /// <param name="categorieId">Initial value of the CategorieId property.</param>
        public static Topic CreateTopic(global::System.Int32 id, global::System.String nom, global::System.DateTime dateCreation, global::System.Int32 createurId, global::System.String contenu, global::System.Int32 categorieId)
        {
            Topic topic = new Topic();
            topic.Id = id;
            topic.Nom = nom;
            topic.DateCreation = dateCreation;
            topic.CreateurId = createurId;
            topic.Contenu = contenu;
            topic.CategorieId = categorieId;
            return topic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreation
        {
            get
            {
                return _DateCreation;
            }
            set
            {
                OnDateCreationChanging(value);
                ReportPropertyChanging("DateCreation");
                _DateCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreation");
                OnDateCreationChanged();
            }
        }
        private global::System.DateTime _DateCreation;
        partial void OnDateCreationChanging(global::System.DateTime value);
        partial void OnDateCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreateurId
        {
            get
            {
                return _CreateurId;
            }
            set
            {
                OnCreateurIdChanging(value);
                ReportPropertyChanging("CreateurId");
                _CreateurId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateurId");
                OnCreateurIdChanged();
            }
        }
        private global::System.Int32 _CreateurId;
        partial void OnCreateurIdChanging(global::System.Int32 value);
        partial void OnCreateurIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contenu
        {
            get
            {
                return _Contenu;
            }
            set
            {
                OnContenuChanging(value);
                ReportPropertyChanging("Contenu");
                _Contenu = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contenu");
                OnContenuChanged();
            }
        }
        private global::System.String _Contenu;
        partial void OnContenuChanging(global::System.String value);
        partial void OnContenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategorieId
        {
            get
            {
                return _CategorieId;
            }
            set
            {
                OnCategorieIdChanging(value);
                ReportPropertyChanging("CategorieId");
                _CategorieId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategorieId");
                OnCategorieIdChanged();
            }
        }
        private global::System.Int32 _CategorieId;
        partial void OnCategorieIdChanging(global::System.Int32 value);
        partial void OnCategorieIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Topic_Categorie", "Categorie")]
        public Categorie Categorie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categorie>("DAL.FK_Topic_Categorie", "Categorie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categorie>("DAL.FK_Topic_Categorie", "Categorie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categorie> CategorieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categorie>("DAL.FK_Topic_Categorie", "Categorie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categorie>("DAL.FK_Topic_Categorie", "Categorie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Message_Topic", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("DAL.FK_Message_Topic", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("DAL.FK_Message_Topic", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="TypeArticle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeArticle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeArticle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        public static TypeArticle CreateTypeArticle(global::System.Int32 id, global::System.String nom)
        {
            TypeArticle typeArticle = new TypeArticle();
            typeArticle.Id = id;
            typeArticle.Nom = nom;
            return typeArticle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Articles_TypeArticle", "Article")]
        public EntityCollection<Article> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Article>("DAL.FK_Articles_TypeArticle", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Article>("DAL.FK_Articles_TypeArticle", "Article", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="TypeSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeSession object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        public static TypeSession CreateTypeSession(global::System.Int32 id, global::System.String nom)
        {
            TypeSession typeSession = new TypeSession();
            typeSession.Id = id;
            typeSession.Nom = nom;
            return typeSession;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_SessionTypeSession", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("DAL.FK_SessionTypeSession", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("DAL.FK_SessionTypeSession", "Session", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Utilisateur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Employe))]
    [KnownTypeAttribute(typeof(Client))]
    public partial class Utilisateur : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Utilisateur object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        /// <param name="adresse">Initial value of the Adresse property.</param>
        /// <param name="ville">Initial value of the Ville property.</param>
        /// <param name="codePostal">Initial value of the CodePostal property.</param>
        /// <param name="telephone">Initial value of the Telephone property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static Utilisateur CreateUtilisateur(global::System.Int32 id, global::System.String nom, global::System.String prenom, global::System.String adresse, global::System.String ville, global::System.String codePostal, global::System.String telephone, global::System.String mail, global::System.String password, global::System.Int32 roleId)
        {
            Utilisateur utilisateur = new Utilisateur();
            utilisateur.Id = id;
            utilisateur.Nom = nom;
            utilisateur.Prenom = prenom;
            utilisateur.Adresse = adresse;
            utilisateur.Ville = ville;
            utilisateur.CodePostal = codePostal;
            utilisateur.Telephone = telephone;
            utilisateur.Mail = mail;
            utilisateur.Password = password;
            utilisateur.RoleId = roleId;
            return utilisateur;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prenom
        {
            get
            {
                return _Prenom;
            }
            set
            {
                OnPrenomChanging(value);
                ReportPropertyChanging("Prenom");
                _Prenom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prenom");
                OnPrenomChanged();
            }
        }
        private global::System.String _Prenom;
        partial void OnPrenomChanging(global::System.String value);
        partial void OnPrenomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Adresse
        {
            get
            {
                return _Adresse;
            }
            set
            {
                OnAdresseChanging(value);
                ReportPropertyChanging("Adresse");
                _Adresse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Adresse");
                OnAdresseChanged();
            }
        }
        private global::System.String _Adresse;
        partial void OnAdresseChanging(global::System.String value);
        partial void OnAdresseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ville
        {
            get
            {
                return _Ville;
            }
            set
            {
                OnVilleChanging(value);
                ReportPropertyChanging("Ville");
                _Ville = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ville");
                OnVilleChanged();
            }
        }
        private global::System.String _Ville;
        partial void OnVilleChanging(global::System.String value);
        partial void OnVilleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CodePostal
        {
            get
            {
                return _CodePostal;
            }
            set
            {
                OnCodePostalChanging(value);
                ReportPropertyChanging("CodePostal");
                _CodePostal = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CodePostal");
                OnCodePostalChanged();
            }
        }
        private global::System.String _CodePostal;
        partial void OnCodePostalChanging(global::System.String value);
        partial void OnCodePostalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Avatar
        {
            get
            {
                return StructuralObject.GetValidValue(_Avatar);
            }
            set
            {
                OnAvatarChanging(value);
                ReportPropertyChanging("Avatar");
                _Avatar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Avatar");
                OnAvatarChanged();
            }
        }
        private global::System.Byte[] _Avatar;
        partial void OnAvatarChanging(global::System.Byte[] value);
        partial void OnAvatarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pseudo
        {
            get
            {
                return _Pseudo;
            }
            set
            {
                OnPseudoChanging(value);
                ReportPropertyChanging("Pseudo");
                _Pseudo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pseudo");
                OnPseudoChanged();
            }
        }
        private global::System.String _Pseudo;
        partial void OnPseudoChanging(global::System.String value);
        partial void OnPseudoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Utilisateurs_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DAL.FK_Utilisateurs_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DAL.FK_Utilisateurs_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DAL.FK_Utilisateurs_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("DAL.FK_Utilisateurs_Roles", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Utilisateurs_ClientSessions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Utilisateurs_ClientSessions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Utilisateurs_ClientSessions object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="offreId">Initial value of the OffreId property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="utilisateurs_ClientId">Initial value of the Utilisateurs_ClientId property.</param>
        public static Utilisateurs_ClientSessions CreateUtilisateurs_ClientSessions(global::System.Int32 id, global::System.Int32 offreId, global::System.Int32 sessionId, global::System.Int32 utilisateurs_ClientId)
        {
            Utilisateurs_ClientSessions utilisateurs_ClientSessions = new Utilisateurs_ClientSessions();
            utilisateurs_ClientSessions.Id = id;
            utilisateurs_ClientSessions.OffreId = offreId;
            utilisateurs_ClientSessions.SessionId = sessionId;
            utilisateurs_ClientSessions.Utilisateurs_ClientId = utilisateurs_ClientId;
            return utilisateurs_ClientSessions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OffreId
        {
            get
            {
                return _OffreId;
            }
            set
            {
                OnOffreIdChanging(value);
                ReportPropertyChanging("OffreId");
                _OffreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OffreId");
                OnOffreIdChanged();
            }
        }
        private global::System.Int32 _OffreId;
        partial void OnOffreIdChanging(global::System.Int32 value);
        partial void OnOffreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private Nullable<global::System.Single> _Note;
        partial void OnNoteChanging(Nullable<global::System.Single> value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Utilisateurs_ClientId
        {
            get
            {
                return _Utilisateurs_ClientId;
            }
            set
            {
                OnUtilisateurs_ClientIdChanging(value);
                ReportPropertyChanging("Utilisateurs_ClientId");
                _Utilisateurs_ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Utilisateurs_ClientId");
                OnUtilisateurs_ClientIdChanged();
            }
        }
        private global::System.Int32 _Utilisateurs_ClientId;
        partial void OnUtilisateurs_ClientIdChanging(global::System.Int32 value);
        partial void OnUtilisateurs_ClientIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Utilisateurs_ClientSessions_Sessions", "Session")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("DAL.FK_Utilisateurs_ClientSessions_Sessions", "Session").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("DAL.FK_Utilisateurs_ClientSessions_Sessions", "Session").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("DAL.FK_Utilisateurs_ClientSessions_Sessions", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("DAL.FK_Utilisateurs_ClientSessions_Sessions", "Session", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Client")]
        public Client Utilisateurs_Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DAL.FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DAL.FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> Utilisateurs_ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("DAL.FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("DAL.FK_Utilisateurs_ClientSessions_Utilisateurs_Client", "Client", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Vehicule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="sessions_id">Initial value of the Sessions_id property.</param>
        public static Vehicule CreateVehicule(global::System.Int32 id, global::System.String nom, global::System.Int32 sessions_id)
        {
            Vehicule vehicule = new Vehicule();
            vehicule.Id = id;
            vehicule.Nom = nom;
            vehicule.Sessions_id = sessions_id;
            return vehicule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sessions_id
        {
            get
            {
                return _Sessions_id;
            }
            set
            {
                OnSessions_idChanging(value);
                ReportPropertyChanging("Sessions_id");
                _Sessions_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sessions_id");
                OnSessions_idChanged();
            }
        }
        private global::System.Int32 _Sessions_id;
        partial void OnSessions_idChanging(global::System.Int32 value);
        partial void OnSessions_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "SessionVehicule", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("DAL.SessionVehicule", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("DAL.SessionVehicule", "Session", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
