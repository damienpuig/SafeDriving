//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace POCO
{
    public partial class Message
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Contenu
        {
            get;
            set;
        }
    
        public virtual System.DateTime DateCreation
        {
            get;
            set;
        }
    
        public virtual int CreateurId
        {
            get;
            set;
        }
    
        public virtual int TopicId
        {
            get { return _topicId; }
            set
            {
                if (_topicId != value)
                {
                    if (Topic != null && Topic.Id != value)
                    {
                        Topic = null;
                    }
                    _topicId = value;
                }
            }
        }
        private int _topicId;

        #endregion
        #region Navigation Properties
    
        public virtual Topic Topic
        {
            get { return _topic; }
            set
            {
                if (!ReferenceEquals(_topic, value))
                {
                    var previousValue = _topic;
                    _topic = value;
                    FixupTopic(previousValue);
                }
            }
        }
        private Topic _topic;

        #endregion
        #region Association Fixup
    
        private void FixupTopic(Topic previousValue)
        {
            if (previousValue != null && previousValue.Messages.Contains(this))
            {
                previousValue.Messages.Remove(this);
            }
    
            if (Topic != null)
            {
                if (!Topic.Messages.Contains(this))
                {
                    Topic.Messages.Add(this);
                }
                if (TopicId != Topic.Id)
                {
                    TopicId = Topic.Id;
                }
            }
        }

        #endregion
    }
}
